@charset "utf-8";

//***********************
// hasPseudoClass
// $name
//***********************
@mixin hasPseudoClass($loc:false, $position: absolute){
  position: relative;
  @if $loc == before{
    &:before{
      display: block;
      content: "";
      position: $position;
    }
  }@else if $loc == after{
    &:after{
      display: block;
      content: "";
      position: $position;
    }
  }@else{
    &:before,
    &:after{
      display: block;
      content: "";
      position: $position;
    }
  }
}

//***********************
// imageReplace
// @param $name
//***********************
@mixin imageReplace($path, $imgWidth, $imgHeight, $scale: 1, $position: 0 0, $size: 100%, $repeat: no-repeat){
  display: block;
  overflow: hidden;
  padding-top: $imgHeight * $scale;
  width: $imgWidth * $scale;
  height: 0;
  background-image: url($filePath + $path);
  background-position: $position;
  background-size: $size;
  background-repeat: $repeat;
}

//***********************
// Sprite css image replacement (Medium size)
// @param $name
//***********************
@mixin sprite-ir($sprite, $scale: 1, $display: block){
  @include sprite-image($sprite);
  $sprite-offset-x: nth($sprite, 3) * $scale;
  $sprite-offset-y: nth($sprite, 4) * $scale;
  background-position: $sprite-offset-x  $sprite-offset-y;
  display: $display;
  overflow: hidden;
  padding-top: nth($sprite, 6) * $scale;
  width: nth($sprite, 5) * $scale;
  height: 0;
  background-repeat: no-repeat;
  background-size: nth($sprite, 7) * $scale nth($sprite, 8) * $scale;
}


//***********************
// web font
//***********************
// use genericon
@mixin genericon($content:'\f100', $valaign: text-bottom, $position: static, $display: inline-block, $line-height: 1em){
  position: $position;
  display: $display;
  content: $content;
  vertical-align: $valaign;
  font-family: 'Genericons';
  line-height: $line-height;
}
// use font-awesome
@mixin fa($content: '', $fontsize: 16px, $valaign: baseline){
  display: inline-block;
  content: $content;
  vertical-align: $valaign;
  text-decoration: inherit;
  font-weight: normal;
  font-style: normal;
  font-size: $fontsize;
  font-family: FontAwesome;
  -webkit-font-smoothing: antialiased;
}

//***********************
// css graphic
//***********************
// Triangle
@mixin triangle($direction, $width, $height, $color) {
  width: 0;
  height: 0;
  @if $direction == 'up' {
    border-right: $height / 2 solid transparent;
    border-bottom: $width solid $color;
    border-left: $height / 2 solid transparent;
  } @else if $direction == 'down' {
    border-top: $width solid $color;
    border-right: $height / 2 solid transparent;
    border-left: $height / 2 solid transparent;
  } @else if $direction == 'left' {
    border-top: $height / 2 solid transparent;
    border-right: $width solid $color;
    border-bottom: $height / 2 solid transparent;
  } @else if $direction == 'right' {
    border-top: $height / 2 solid transparent;
    border-bottom: $height / 2 solid transparent;
    border-left: $width solid $color;
  }
}

@mixin corner-triangle($corner, $size, $color) {
  width: 0;
  height: 0;
  @if $corner == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  } @else if $corner == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  } @else if $corner == 'bottom-left' {
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $corner == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
}

// Center block
@mixin center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

//***********************
// button Base
// ---
// required foundation
//***********************
@mixin buttonBase($padding, $color, $fullWidth: false) {
  @include button(
    $padding: $padding,
    $bg: $color,
    $full-width: $fullWidth
  );
  position: static;
  box-shadow: 0 2px 0 darken($color, 10%);
  &:focus {
      outline: none;
  }
  &:link,
  &:visited {
    color: $colorWhite;
  }
  &:hover,
  &:active,
  &:focus {
    outline: 0;
    color: $colorWhite;
    text-decoration: none;
  }
}

//***********************
// Animates
//***********************
%slideIn {
  animation-name: slideIn;
  animation-duration: 6s;
  animation-fill-mode: both;
  animation-iteration-count: 1;
}
%hovering {
  animation-name: slideIn, hovering;
  animation-duration: 2s, 3s;
  animation-timing-function: ease-out, ease-in-out;
  animation-delay: 1s, 0.1s;
  animation-iteration-count: 1, infinite;
  animation-direction: normal, normal;
  animation-fill-mode: backwards, none;
  // animation: slideIn ease-in 2000ms 1000ms 1 backwards normal, ease-in-out hovering 3000ms 100ms infinite forwards normal;
}
@keyframes hovering {
  0% { transform: translate(0, 0px); }
  50% { transform: translate(0, 4%); }
  100% { transform: translate(0, -0px); }
}
@keyframes slideIn {
  0% { transform: translate(0, -600px); }
  100% { transform: translate(0, 0); }
}
